# Generated by Django 4.2.17 on 2025-01-03 23:39

from django.db import migrations, models


def migrate_makebookmark_to_bookmark(apps, schema_editor):
    BookMark = apps.get_model("judge", "BookMark")
    MakeBookMark = apps.get_model("judge", "MakeBookMark")
    Profile = apps.get_model("judge", "Profile")

    for make_bookmark in MakeBookMark.objects.all():
        try:
            bookmark = make_bookmark.bookmark
            user = make_bookmark.user

            bookmark.users.add(user)

            bookmark.score += 1
            bookmark.save(update_fields=["score"])

        except BookMark.DoesNotExist:
            continue
        except Profile.DoesNotExist:
            continue


class Migration(migrations.Migration):

    dependencies = [
        ("judge", "0196_add_interactive_testlib"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="bookmark",
            name="page",
        ),
        migrations.AddField(
            model_name="bookmark",
            name="users",
            field=models.ManyToManyField(
                blank=True, related_name="bookmarked_objects", to="judge.profile"
            ),
        ),
        migrations.AlterField(
            model_name="contest",
            name="authors",
            field=models.ManyToManyField(
                help_text="These users will be able to edit the contest.",
                related_name="authors+",
                to="judge.profile",
                verbose_name="authors",
            ),
        ),
        migrations.AlterField(
            model_name="contest",
            name="curators",
            field=models.ManyToManyField(
                blank=True,
                help_text="These users will be able to edit the contest, but will not be listed as authors.",
                related_name="curators+",
                to="judge.profile",
                verbose_name="curators",
            ),
        ),
        migrations.AlterField(
            model_name="contest",
            name="private_contestants",
            field=models.ManyToManyField(
                blank=True,
                help_text="If private, only these users may see the contest",
                related_name="private_contestants+",
                to="judge.profile",
                verbose_name="private contestants",
            ),
        ),
        migrations.AlterField(
            model_name="contest",
            name="rate_exclude",
            field=models.ManyToManyField(
                blank=True,
                related_name="rate_exclude+",
                to="judge.profile",
                verbose_name="exclude from ratings",
            ),
        ),
        migrations.AlterField(
            model_name="contest",
            name="testers",
            field=models.ManyToManyField(
                blank=True,
                help_text="These users will be able to view the contest, but not edit it.",
                related_name="testers+",
                to="judge.profile",
                verbose_name="testers",
            ),
        ),
        migrations.RunPython(migrate_makebookmark_to_bookmark),
        migrations.DeleteModel(
            name="MakeBookMark",
        ),
    ]
